{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"LICENSE/","title":"LICENSE","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"","title":"VSCode ROS2 Workspace Template","text":"<p>This template will get you set up using ROS2 with VSCode as your IDE.</p> <p>See how I develop with vscode and ros2 for a more in-depth look on how to use this workspace.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#style","title":"Style","text":"<p>ROS2-approved formatters are included in the IDE.  </p> <ul> <li>c++ uncrustify; config from <code>ament_uncrustify</code></li> <li>python autopep8; vscode settings consistent with the style guide</li> </ul>"},{"location":"#tasks","title":"Tasks","text":"<p>There are many pre-defined tasks, see <code>.vscode/tasks.json</code> for a complete listing.  Feel free to adjust them to suit your needs.  </p> <p>Take a look at how I develop using tasks for an idea on how I use tasks in my development.</p>"},{"location":"#debugging","title":"Debugging","text":"<p>This template sets up debugging for python files, gdb for cpp programs and ROS launch files.  See <code>.vscode/launch.json</code> for configuration details.</p>"},{"location":"#continuous-integration","title":"Continuous Integration","text":"<p>The template also comes with basic continuous integration set up. See <code>.github/workflows/ros.yaml</code>.</p> <p>To remove a linter just delete it's name from this line:</p> <pre><code>      matrix:\n          linter: [cppcheck, cpplint, uncrustify, lint_cmake, xmllint, flake8, pep257]\n</code></pre>"},{"location":"#how-to-use-this-template","title":"How to use this template","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p>You should already have Docker and VSCode with the remote containers plugin installed on your system.</p> <ul> <li>docker</li> <li>vscode</li> <li>vscode remote containers plugin</li> </ul>"},{"location":"#nvidia-support","title":"NVidia support","text":"<p>To make nvidia driver and opengl available in docker, follow the installation instructions for docker-nvidia. They include the steps in docker and add the additional gpu layer.</p> <ul> <li>docker-nvidia (includes docker install and additional installation for NVidia GPU accelerated hosts)</li> </ul>"},{"location":"#get-the-template","title":"Get the template","text":"<p>Click on \"use this template\"</p> <p></p>"},{"location":"#create-your-repository","title":"Create your repository","text":"<p>On the next dialog, name the repository you would like to start and decide if you want all of the branches, or the default branch.</p> <p>[!IMPORTANT] The new default branch supports any version of ROS by setting the appropriate version you want in the 'FROM' line in <code>.devcontainer/Dockerfile</code></p> <p>By default, this is set to <code>osrf/ros:jazzy-desktop-full</code></p> <p></p> <p>Github will then create a new repository with the contents of this one in your account.  It grabs the latest changes as \"initial commit\".</p>"},{"location":"#clone-your-repo","title":"Clone your repo","text":"<p>Now you can clone your repo as normal</p> <p></p>"},{"location":"#open-it-in-vscode","title":"Open it in vscode","text":"<p>Now that you've cloned your repo onto your computer, you can open it in VSCode (File-&gt;Open Folder).</p> <p>When you open it for the first time, you should see a little popup that asks you if you would like to open it in a container.  Say yes!</p> <p></p> <p>If you don't see the pop-up, click on the little green square in the bottom left corner, which should bring up the container dialog</p> <p></p> <p>In the dialog, select \"Remote Containers: Reopen in container\"</p> <p>VSCode will build the dockerfile inside of <code>.devcontainer</code> for you.  If you open a terminal inside VSCode (Terminal-&gt;New Terminal), you should see that your username has been changed to <code>ros</code>, and the bottom left green corner should say \"Dev Container\"</p> <p></p>"},{"location":"#update-the-template-with-your-code","title":"Update the template with your code","text":"<ol> <li>Specify the repositories you want to include in your workspace in <code>src/ros2.repos</code> or delete <code>src/ros2.repos</code> and develop directly within the workspace.</li> <li>If you are using a <code>ros2.repos</code> file, import the contents <code>Terminal-&gt;Run Task..-&gt;import from workspace file</code></li> <li>Install dependencies <code>Terminal-&gt;Run Task..-&gt;install dependencies</code></li> <li>(optional) Adjust scripts to your liking.  These scripts are used both within tasks and CI.</li> <li><code>setup.sh</code> The setup commands for your code.  Default to import workspace and install dependencies.</li> <li><code>build.sh</code> The build commands for your code.  Default to <code>--merge-install</code> and <code>--symlink-install</code></li> <li><code>test.sh</code> The test commands for your code.</li> <li>Develop!</li> </ol>"},{"location":"#faq","title":"FAQ","text":""},{"location":"#xauthority","title":"XAuthority","text":"<p>If you see the error:</p> <pre><code>Authorization required, but no authorization protocol specified Unable to open display: :0 Authorization required, but no authorization protocol specified\n</code></pre> <p>You may need to update the UID/GID to match yours.  In <code>.devcontainer/devcontainer.json</code> update the lines that are marked <code>Change to match your UID</code> and <code>Change to match your GID</code></p> <p>.devcontainer/devcontainer.json</p> <pre><code> \"build\": {\n  \"args\": {\n   ...\n   // \"USERNAME\": \"ros\",\n   // \"USER_UID\": \"1000\", //Change to match your UID\n   // \"USER_GID\": \"1000\" // Change to match your GID\n  },\n },\n ...\n \"runArgs\": [\n  ...\n  \"--volume=/run/user/1000:/run/user/1000\", // Change 1000 to match your UID\n  ...\n ],\n</code></pre>"},{"location":"#xdisplay","title":"XDisplay","text":"<p>If you see the error:</p> <pre><code>Couldn't open X display in GLXGLSupport::getGLDisplay at ./.obj-x86_64-linux-gnu/ogre_vendor-prefix/src/ogre_vendor/RenderSystems/GLSupport/src/GLX/OgreGLXGLSupport.cpp\n</code></pre> <p>You need to remove or comment out the wayland options</p> <pre><code> \"runArgs\": [\n  ...\n  // Wayland host\n  //\"--volume=/mnt/wslg:/mnt/wslg\",\n  // \"--volume=/run/user/1000:/run/user/1000\",\n  // uncomment to use intel iGPU\n  // \"--device=/dev/dri\"\n  ...\n ],\n ...\n  \"containerEnv\": {\n  ...\n  // For Wayland\n  // \"WAYLAND_DISPLAY\": \"${localEnv:WAYLAND_DISPLAY}\",\n  // \"XDG_RUNTIME_DIR\": \"${localEnv:XDG_RUNTIME_DIR}\",\n  // \"QT_QPA_PLATFORM\": \"wayland\", // Force Wayland\n  ...\n },\n</code></pre>"},{"location":"#wsl2","title":"WSL2","text":""},{"location":"#the-gui-doesnt-show-up","title":"The gui doesn't show up","text":"<p>This is likely because the DISPLAY environment variable is not getting set properly.</p> <ol> <li> <p>Find out what your DISPLAY variable should be</p> <p>In your WSL2 Ubuntu instance</p> <p><code>bash   echo $DISPLAY</code></p> </li> <li> <p>Copy that value into the <code>.devcontainer/devcontainer.json</code> file</p> <p><code>jsonc   \"containerEnv\": {     \"DISPLAY\": \":0\",   }</code></p> </li> </ol>"},{"location":"#i-want-to-use-vgpu","title":"I want to use vGPU","text":"<p>If you want to access the vGPU through WSL2, you'll need to add additional components to the <code>.devcontainer/devcontainer.json</code> file in accordance to these directions</p> <pre><code> \"runArgs\": [\n  \"--network=host\",\n  \"--cap-add=SYS_PTRACE\",\n  \"--security-opt=seccomp:unconfined\",\n  \"--security-opt=apparmor:unconfined\",\n  \"--volume=/tmp/.X11-unix:/tmp/.X11-unix\",\n  \"--volume=/mnt/wslg:/mnt/wslg\",\n  \"--volume=/usr/lib/wsl:/usr/lib/wsl\",\n  \"--device=/dev/dxg\",\n  \"--gpus=all\"\n ],\n \"containerEnv\": {\n  \"DISPLAY\": \"${localEnv:DISPLAY}\", // Needed for GUI try \":0\" for windows\n  \"WAYLAND_DISPLAY\": \"${localEnv:WAYLAND_DISPLAY}\",\n  \"XDG_RUNTIME_DIR\": \"${localEnv:XDG_RUNTIME_DIR}\",\n  \"PULSE_SERVER\": \"${localEnv:PULSE_SERVER}\",\n  \"LD_LIBRARY_PATH\": \"/usr/lib/wsl/lib\",\n  \"LIBGL_ALWAYS_SOFTWARE\": \"1\" // Needed for software rendering of opengl\n },\n</code></pre>"},{"location":"#repos-are-not-showing-up-in-vs-code-source-control","title":"Repos are not showing up in VS Code source control","text":"<p>This is likely because vscode doesn't necessarily know about other repositories unless you've added them directly.</p> <pre><code>File-&gt;Add Folder To Workspace\n</code></pre> <p></p> <p>Or you've added them as a git submodule.</p> <p></p> <p>To add all of the repos in your *.repos file, run the script</p> <pre><code>python3 .devcontainer/repos_to_submodules.py\n</code></pre> <p>or run the task titled <code>add submodules from .repos</code></p>"},{"location":"#error-handling-for-gpu-acceleration","title":"Error handling for GPU acceleration","text":""},{"location":"#docker-image-cannot-be-built","title":"Docker image cannot be built:","text":"<p>The dockerfile can be built but using devcontainer.json results in error messages like \"docker container cannot connect to device [[gpu]]\" means docker itself is installed, but not the above mentioned nvidia part.</p> <p>Solution is, to follow the guide and the test with nvidia-smi as indicated here:</p> <ul> <li>docker-nvidia(for GPU acceleration on Nvidia GPU hosts)</li> </ul>"},{"location":"#programs-in-docker-cannot-access-gpu","title":"Programs in Docker cannot access GPU","text":"<p>Error messages that show lacking GPU acceleration (in docker terminal)</p> <pre><code>sudo apt-get update   &amp;&amp; sudo apt-get install -y -qq glmark2   &amp;&amp; glmark2\n</code></pre> <p>results in:</p> <pre><code>   libGL error: No matching fbConfigs or visuals found\n   libGL error: failed to load driver: swrast\n      X Error of failed request:  GLXBadContext\n   Major opcode of failed request:  151 (GLX)\n   Minor opcode of failed request:  6 (X_GLXIsDirect)\n   Serial number of failed request:  48\n   Current serial number in output stream:  47\n</code></pre> <p>Solution is, to follow the guide and the test with nvidia-smi as indicated here:  docker-nvidia(for GPU acceleration on Nvidia GPU hosts)</p>"},{"location":"#more-information","title":"more information","text":"<p>https://wiki.ros.org/docker/Tutorials/GUI https://medium.com/@benjamin.botto/opengl-and-cuda-applications-in-docker-af0eece000f1 https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker</p>"}]}